// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// Модель пользователя системы
model User {
  id                 String    @id @default(uuid())
  email              String    @unique
  password           String
  firstName          String
  lastName           String
  phone              String?
  role               UserRole  @default(CLIENT)
  isActive           Boolean   @default(true)
  isEmailVerified    Boolean   @default(false)
  resetPasswordToken String?
  resetPasswordExpires DateTime?
  invitationToken    String?
  invitationExpires  DateTime?
  createdAt          DateTime  @default(now())
  updatedAt          DateTime  @updatedAt

  company            Company?  @relation(fields: [companyId], references: [id])
  companyId          String?

  // Связи для запросов и чатов будут добавлены позже
  // clientRequests     Request[] @relation("ClientRequests")
  // conciergeRequests  Request[] @relation("ConciergeRequests")
  // messages           ChatMessage[]

  @@map("users")
}

// Модель компании клиента
model Company {
  id          String    @id @default(uuid())
  name        String
  inn         String?
  description String?
  address     String?
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
  
  users       User[]
  // requests    Request[]

  @@map("companies")
}

// Роли пользователей
enum UserRole {
  ADMIN               // Администратор платформы
  CONCIERGE           // Консьерж-менеджер
  CLIENT              // Предприниматель (клиент)
  EMPLOYEE            // Сотрудник компании клиента
}
